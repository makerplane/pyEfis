[main]
# IP information for network adapter
FixServer = 127.0.0.1
FixPort = 3490


[mainscreen]
# Screen Geometry
#screenSize.Width = 1000
#screenSize.Height = 700
screenSize.Width = 800
screenSize.Height = 480

# Set EFIS to occupy the entire screen without system border / menu
screenFullSize = True

# Screen background color RGB
screenColor = (0,0,0)

# If left out the first defined screen will be default
defaultScreen = PFD

# This section defines FIX IDs that we'll write out to the
# FIX Gateway server.  Each can be defined as one of three
# methods.  Interval will look at the time out lifetime (TOL)
# of the point and send the data at half that interval.
# OnChange will send when the value is changed and Both will
# do both.
[Outputs]
TAS = Interval
BARO = Both
BTN16 = OnChange


# Screen definitions describe the screens that will be loaded
# and ready for use.  Each section should start with "Screen."
# followed by the name.  The only required configuration is
# module, which is the module that will be loaded to render
# the screen
#[Screen.Test]
#module = screens.test
#title = Test Screen

[Screen.PFD]
module = screens.pfd_sm
title = Primary Flight Display

#[Screen.SixPack]
#module = screens.sixpack
#title = Standard Instrument Panel

# Hooks are user defined modules that are loaded at specific points
# in the programs execution.  Right now their is only one place and
# it is right after all of the initialization and just before the
# main window and default screen are shown.  We'll add more as the
# need arises.
[Hook.Keys]
module = user.hooks.keys

[Hook.Composite]
module = user.hooks.composite


# Logging configuration - See Python logging.config module documenation
[loggers]
keys=root

[handlers]
keys=stderr,file,syslog

[formatters]
keys=form1

[logger_root]
# messages with levels below the one given will not be logged
#level=DEBUG
level=INFO
#level=WARNING
#level=ERROR
#level=CRITICAL

handlers=stderr
#handlers=file
#handlers=syslog
propagate=1

[handler_stderr]
class=StreamHandler
formatter=form1
args=(sys.stderr,)

[handler_file]
class=FileHandler
formatter=form1
# Overwrites the log file each start
args=('fixgw.log', 'w')
# Appends to the log file
# args=('pyefis.log', 'a')

[handler_syslog]
class=handlers.SysLogHandler
formatter=form1
args=()

[formatter_form1]
format=%(levelname)s:%(asctime)s:%(name)s - %(message)s
datefmt=%Y%m%d-%H:%M:%S
class=logging.Formatter
