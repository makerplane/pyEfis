name: pyefis
adopt-info: pyefis
grade: stable
license: GPL-2.0+
summary: pyEFIS Open Source Avionics Application
description: |
  The MakerPlane Electronic Flight Information System (EFIS) is written in Python and called ‘pyEFIS’. It was created for use within Experimental-Amateur Built aircraft.

  It uses the FiX Gateway plug-in to communicate to and from the CAN-FiX protocol to sensors and other instruments. pyEFIS can be installed on low-cost single board computers such as the Raspberry Pi or Beaglebone with many screen size options to fit different aircraft panel requirements. Resolution of the display is also a configuration option and is not a limitation within the software.

  Installation guide: https://github.com/makerplane/pyEfis/blob/master/INSTALL.md

  This snap requires enabling experimental.user-daemons features:
  sudo snap set system experimental.user-daemons=true

  Breaking Changes:
  * Ensure your fix gateway database.yaml file defines a db key named 'ZZLOADER', without this pyefis will not load.
  * Configuration files have been split up taking advantage of yaml includes. Related to this pyefis will auto-update unedited config files in ~/makerplane/pyefis/config/ However, configuration files that exist in ~/makerplane/pyefis/config/ prior to installing this release will not be maintained. You may want to backup your config files, delete them and let pyefis replace all of them. Then merge any custom changes.

  Release Notes:
  This is a beta release and has not seen much testing, if you find any bugs please report them here: https://github.com/makerplane/pyEfis/issues
  This release includes many new features including:
  * Config driven screen creation
  * Programable touchscreen buttons
  * Listbox widget
  * Control pyEFIS with a single rotary encoder and button
  * Moved to core24 and python 3.12
  * snap now includes the FAA CIFP data for Virtual VFR
  * yaml includes, easily include contents of one yaml file in another
  * Automatically sets screen resolution to match your screen, or you can still set it manually in the config file.
  * Technology Preview - run Android inside pyEFIS for access to your favorite aviation apps
  You can find the instructions to setup Android here: https://github.com/makerplane/pyEfis/blob/master/ANDROID.md

  Known Issues for Android: 
  * No pinch zoom 

issues: https://github.com/makerplane/pyEfis/issues
donation: https://www.paypal.com/donate/?hosted_button_id=VGHHNUG3LRPYL
source-code: https://github.com/makerplane/pyEfis
website: https://makerplane.org/

base: core24
confinement: strict
compression: lzo 
platforms:
  arm64:
    build-on: [arm64]
  amd64:

layout:
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libweston-9:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libweston-9
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libweston-13:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libweston-13
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston-desktop-shell:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston-desktop-shell
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston-keyboard:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/weston-keyboard
  /usr/share/weston:
    bind: $SNAP/usr/share/weston
  /usr/libexec:
    bind: $SNAP/usr/libexec
  /usr/share/libdrm:
    bind: $SNAP/gpu-2404/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/gpu-2404/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/gpu-2404/X11/XErrorDB
  /usr/share/X11/locale:
    symlink: $SNAP/gpu-2404/X11/locale
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/makerplane/CIFP:
    symlink: $SNAP/faa-cifp-data/CIFP

parts:
  extras:
    source: ./extras
    plugin: dump

  pyefis:
    plugin: python
    source: .
    # Use the OS provided pyqt6 to reduce build issues
    override-build: |
      sed -i 's/"PyQt6==6.8.0",//' pyproject.toml
      craftctl default
      craftctl set version=$(python3 src/pyefis/version.py)
    stage-packages:
      - python3-xlib
      - libxcb-cursor0
      - libqt6core6
      - libqt6qml6
      - libqt6qmlmodels6
      - libqt6quick6
      - libqt6svg6
      - libqt6waylandclient6
      - libqt6waylandcompositor6
      - python3.12-minimal
      - libpython3.12-minimal
      - libpython3.12-stdlib
      - python3-venv
      - python3-minimal
      - python3-pkg-resources
      - python3-pyqt6
      - x11-utils
      - weston
      - fonts-dejavu-core
      - fonts-dejavu-extra
      - fonts-dseg
      - libglu1-mesa
      - libegl-mesa0
      - libegl1
      - libdrm2
      - libva-drm2
      - x11-xkb-utils
      - xkb-data
    build-packages:
      - execstack
    build-environment:
      - PARTS_PYTHON_INTERPRETER: python3.12
#      - PIP_VERBOSE: 3
      - PIP_IGNORE_INSTALLED: ''
      - PARTS_PYTHON_VENV_ARGS: --system-site-packages
    override-prime: |
      set -eu
      craftctl default
      for f in usr/lib/arm-linux-gnueabihf/libx264.so.164; do
        if [ -f $f ]; then
          execstack -c $f
        fi
      done
  gpu-2404:
    after: [pyefis]
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404 nvidia-core24
    prime:
    - bin/gpu-2404-wrapper

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404

  faa-cifp-data:
    interface : content
    target: $SNAP/faa-cifp-data
    default-provider: faa-cifp-data

apps:
  daemon:
    command-chain:
      - bin/gpu-2404-wrapper
    command: bin/pyefis
    daemon: simple
    daemon-scope: user 
    # Woud be nice to also support options: https://snapcraft.io/docs/adding-snap-configuration
    restart-condition: always
#    install-mode: disable
    plugs: 
      - home 
      - network 
      - desktop-legacy
      - desktop
      - wayland
      - x11
      - opengl
      - audio-playback
      - audio-record

    environment:
      PATH: $SNAP/bin:$SNAP/usr/bin:$SNAP/usr/local/bin:$PATH
      PYTHONPATH: $SNAP/lib/python3.12/site-packages:$SNAP/usr/lib/python3/dist-packages:$PYTHONPATH
      QT_QPA_PLATFORM: xcb
      QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/plugins/ 

  server:
    command-chain:
      - bin/gpu-2404-wrapper
    command: bin/pyefis
    plugs:
      - home
      - network
      - desktop-legacy
      - desktop
      - wayland
      - x11
      - opengl
      - audio-playback
      - audio-record

    environment:
      PATH: $SNAP/bin:$SNAP/usr/bin:$SNAP/usr/local/bin:$PATH
      PYTHONPATH: $SNAP/lib/python3.12/site-packages:$SNAP/usr/lib/python3/dist-packages:$PYTHONPATH
      QT_QPA_PLATFORM: xcb
      QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/plugins/

  makecifpindex:
    command: bin/makecifpindex
    plugs: [ home, network, desktop-legacy, desktop, wayland, x11, opengl]
    environment:
      PATH: $SNAP/bin:$SNAP/usr/bin:$SNAP/usr/local/bin:$PATH
      PYTHONPATH: $SNAP/lib/python3.12/site-packages:$SNAP/usr/lib/python3/dist-packages:$PYTHONPATH

